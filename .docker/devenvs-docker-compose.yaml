name: frontendbackend-festive_matsumoto
services:
  backend:
    build:
      context: C:\Source\frontendbackend\mybackend
      dockerfile: Dockerfile
      target: final
    depends_on:
      db:
        condition: service_started
    expose:
    - "5293"
    labels:
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.compose.build: "true"
      com.docker.devenvironments.name: frontendbackend-festive_matsumoto
    networks:
      backend-mysql: null
      frontend-backend: null
    ports:
    - mode: ingress
      target: 5293
      published: "5293"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
  db:
    build:
      context: C:\Source\frontendbackend\db
      dockerfile: Dockerfile
    environment:
      MYSQL_DATABASE: testbase
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db-password
    expose:
    - "3306"
    labels:
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.compose.build: "true"
      com.docker.devenvironments.name: frontendbackend-festive_matsumoto
    networks:
      backend-mysql: null
    ports:
    - mode: ingress
      target: 3306
      published: "3306"
      protocol: tcp
    restart: always
    secrets:
    - source: db-password
    volumes:
    - type: volume
      source: db-data
      target: /var/lib/mysql
      volume: {}
  frontend:
    build:
      context: C:\Source\frontendbackend\myfrontend
      dockerfile: Dockerfile
    depends_on:
      mybackend:
        condition: service_started
    expose:
    - "80"
    labels:
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.compose.build: "true"
      com.docker.devenvironments.name: frontendbackend-festive_matsumoto
    networks:
      frontend-backend: null
    ports:
    - mode: ingress
      target: 80
      published: "8000"
      protocol: tcp
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
networks:
  backend-mysql:
    name: frontendbackend-festive_matsumoto_backend-mysql
  default:
    name: frontendbackend-festive_matsumoto_default
  frontend-backend:
    name: frontendbackend-festive_matsumoto_frontend-backend
volumes:
  db-data:
    name: frontendbackend-festive_matsumoto_db-data
secrets:
  db-password:
    name: frontendbackend-festive_matsumoto_db-password
    file: C:\Source\frontendbackend\db\password.txt
